const path = require('path');

module.exports = {
    root: true,
    extends: ['prettier', 'prettier/@typescript-eslint', 'prettier/react'],
    parser: '@typescript-eslint/parser',
    plugins: ['@typescript-eslint', 'react', 'prettier'],
    parserOptions: {
        parser: '@typescript-eslint/parser',
        ecmaVersion: 6,
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true,
        },
        project: path.resolve(__dirname, './tsconfig.json'),
        tsconfigRootDir: __dirname,
    },
    settings: {
        react: {
            version: 'detect',
        },
    },
    env: {
        browser: true,
        es6: true,
        node: true,
    },
    globals: {
        window: true,
    },
    rules: {
        /** Possible Errors */
        'no-extra-boolean-cast': 'error',
        'no-extra-parens': ['error', 'all', { ignoreJSX: 'multi-line' }],
        'no-extra-semi': 'error',
        'no-regex-spaces': 'error',
        'no-unsafe-negation': 'error',

        /** Best Practices */
        curly: 'error',
        'dot-location': ['error', 'property'],
        'dot-notation': 'error',
        eqeqeq: 'error',
        'no-div-regex': 'error',
        'no-else-return': 'error',
        'no-extra-bind': 'error',
        'no-extra-label': 'error',
        'no-floating-decimal': 'error',
        'no-implicit-coercion': 'error',
        'no-multi-spaces': 'error',
        'no-unused-labels': 'error',
        'no-useless-return': 'error',
        'wrap-iife': 'error',
        yoda: 'error',

        /** Strict Mode */
        strict: 'error',

        /** Variables */
        // 'no-undef-init': 'error',

        /** Stylistic Issues */
        // 'array-bracket-newline': 'error',
        // 'array-bracket-spacing': 'error',
        // 'array-element-newline': 'error',
        // 'block-spacing': 'error',
        // 'brace-style': 'error',
        // 'capitalized-comments': 'error',
        // 'comma-dangle': 'error',
        // 'comma-spacing': 'error',
        // 'comma-style': 'error',
        // 'computed-property-spacing': 'error',
        // 'eol-last': 'error',
        // 'func-call-spacing': 'error',
        // 'function-paren-newline': 'error',
        // 'implicit-arrow-linebreak': 'error',
        // indent: 'error',
        // 'jsx-quotes': 'error',
        // 'key-spacing': 'error',
        // 'keyword-spacing': 'error',
        // 'linebreak-style': 'error',
        // 'lines-around-comment': 'error',
        // 'lines-between-class-members': 'error',
        // 'multiline-comment-style': 'error',
        // 'new-parens': 'error',
        // 'newline-per-chained-call': 'error',
        // 'no-lonely-if': 'error',
        // 'no-multiple-empty-lines': 'error',
        // 'no-trailing-spaces': 'error',
        // 'no-unneeded-ternary': 'error',
        // 'no-whitespace-before-property': 'error',
        // 'nonblock-statement-body-position': 'error',
        // 'object-curly-newline': 'error',
        // 'object-curly-spacing': 'error',
        // 'object-property-newline': 'error',
        // 'one-var': 'error',
        // 'one-var-declaration-per-line': 'error',
        // 'operator-assignment': 'error',
        // 'operator-linebreak': 'error',
        // 'padded-blocks': 'error',
        // 'padding-line-between-statements': 'error',
        // 'prefer-object-spread': 'error',
        // 'quote-props': 'error',
        // quotes: 'error',
        // semi: 'error',
        // 'semi-spacing': 'error',
        // 'semi-style': 'error',
        // 'sort-vars': 'error',
        // 'space-before-blocks': 'error',
        // 'space-before-function-paren': 'error',
        // 'space-in-parens': 'error',
        // 'space-infix-ops': 'error',
        // 'space-unary-ops': 'error',
        // 'spaced-comment': 'error',
        // 'switch-colon-spacing': 'error',
        // 'template-tag-spacing': 'error',
        // 'unicode-bom': 'error',
        // 'wrap-regex': 'error',
        /** ECMAScript 6 */
        // 'arrow-body-style': 'error',
        // 'arrow-parens': 'error',
        // 'arrow-spacing': 'error',
        // 'generator-star-spacing': 'error',
        // 'no-confusing-arrow': 'error',
        // 'no-useless-computed-key': 'error',
        // 'no-useless-rename': 'error',
        // 'no-var': 'error',
        // 'object-shorthand': 'error',
        // 'prefer-arrow-callback': 'error',
        // 'prefer-const': 'error',
        // 'prefer-destructuring': 'error',
        // 'prefer-numeric-literals': 'error',
        // 'prefer-template': 'error',
        // 'rest-spread-spacing': 'error',
        // 'sort-imports': 'error',
        // 'template-curly-spacing': 'error',
        // 'yield-star-spacing': 'error',

        // 'react/jsx-boolean-value': 'error',
        // 'react/jsx-closing-bracket-location': 'error',
        // 'react/jsx-closing-tag-location': 'error',
        // 'react/jsx-curly-newline': 'error',
        // 'react/jsx-curly-spacing': 'error',
        // 'react/jsx-equals-spacing:': 'error',
        // 'react/jsx-first-prop-new-line': 'error',
        // 'react/jsx-indent': 'error',
        // 'react/jsx-indent-props': 'error',
        // 'react/jsx-max-props-per-line': 'error',
        // 'react/jsx-props-no-multi-spaces': 'error',
        // 'react/jsx-sort-props': 'error',
        // 'react/jsx-space-before-closing': 'error',
        // 'react/jsx-tag-spacing': 'error',
        // 'react/jsx-wrap-multilines': 'error',

        // '@typescript-eslint/array-type': 'error',
        // '@typescript-eslint/ban-types': 'error',
        // '@typescript-eslint/func-call-spacing': 'error',
        // '@typescript-eslint/indent': 'error',
        // '@typescript-eslint/member-delimiter-style': 'error',
        // '@typescript-eslint/no-array-constructor': 'error',
        // '@typescript-eslint/no-extra-parens': 'error',
        // '@typescript-eslint/no-inferrable-types': 'error',
        // '@typescript-eslint/no-unnecessary-qualifier': 'error',
        // '@typescript-eslint/no-unnecessary-type-assertion': 'error',
        // '@typescript-eslint/prefer-function-type': 'error',
        // '@typescript-eslint/prefer-includes': 'error',
        // '@typescript-eslint/prefer-interface': 'error',
        // '@typescript-eslint/prefer-namespace-keyword': 'error',
        // '@typescript-eslint/prefer-string-starts-ends-with': 'error',
        // '@typescript-eslint/semi': 'error',
        // '@typescript-eslint/type-annotation-spacing': 'error',
    },
};
